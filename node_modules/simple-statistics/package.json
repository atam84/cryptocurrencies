{
  "_from": "simple-statistics",
  "_id": "simple-statistics@5.0.1",
  "_inBundle": false,
  "_integrity": "sha512-MzIO272K2SCsG/fK6daLmvnQbPK/c20JTroJhlTVf2QRqfW0aoYrdrpknbOIsneR8L9fQs1xKPpddjoOP/WKXw==",
  "_location": "/simple-statistics",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "simple-statistics",
    "fetchSpec": "latest",
    "name": "simple-statistics",
    "raw": "simple-statistics",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/simple-statistics/-/simple-statistics-5.0.1.tgz",
  "_shasum": "ea2566dc7ada24e36fcbe7cb2f277ab47869b8a8",
  "_shrinkwrap": null,
  "_spec": "simple-statistics",
  "_where": "C:\\Virtualenv\\nodejs\\crypto\\crypto-collector",
  "author": {
    "email": "tom@macwright.org",
    "name": "Tom MacWright",
    "url": "http://macwright.org/"
  },
  "bugs": {
    "url": "https://github.com/simple-statistics/simple-statistics/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "dependencies": {},
  "deprecated": false,
  "description": "Simple Statistics",
  "devDependencies": {
    "are-we-flow-yet": "^1.0.0",
    "cz-conventional-changelog": "^2.0.0",
    "documentation": "^5.3.2",
    "eslint": "^4.1.0",
    "flow-bin": "^0.57.1",
    "jsdoctest": "^1.7.1",
    "mocha": "^4.0.0",
    "random-js": "^1.0.4",
    "rollup": "^0.50.0",
    "rollup-plugin-uglify": "^2.0.1",
    "standard-version": "^4.0.0",
    "tap": "^10.1.1",
    "uglify-js": "^3.0.0"
  },
  "engines": {
    "node": "*"
  },
  "files": [
    "bower.json",
    "dist",
    "index.js",
    "src"
  ],
  "homepage": "https://github.com/simple-statistics/simple-statistics#readme",
  "jsnext:main": "index",
  "keywords": [
    "descriptive",
    "linear",
    "math",
    "probability",
    "regression",
    "statistics"
  ],
  "license": "ISC",
  "main": "dist/index",
  "module": "index",
  "name": "simple-statistics",
  "optionalDependencies": {},
  "readme": "# Simple Statistics\n\n\nA JavaScript implementation of descriptive, regression, and inference statistics.\n\n[![Circle CI](https://circleci.com/gh/simple-statistics/simple-statistics/tree/master.svg?style=shield)](https://circleci.com/gh/simple-statistics/simple-statistics/tree/master)\n[![codecov.io](https://codecov.io/github/simple-statistics/simple-statistics/coverage.svg?branch=master)](https://codecov.io/github/simple-statistics/simple-statistics?branch=master)\n[![npm version](https://badge.fury.io/js/simple-statistics.svg)](http://badge.fury.io/js/simple-statistics)\n[![Greenkeeper badge](https://badges.greenkeeper.io/simple-statistics/simple-statistics.svg)](https://greenkeeper.io/)\n\nImplemented in literate JavaScript with no dependencies, designed to work\nin all modern browsers (including IE) as well as in [node.js](https://nodejs.org/).\n\n* :green_book: [API Documentation](http://simplestatistics.org/docs/)\n* :chart_with_upwards_trend: [Benchmarks](./benchmarks/)\n* :kissing: [A list of other statistics libraries](./SEEALSO.md)\n\n## Installation\n\n* **I'm using Node.js, Webpack, Browserify, Rollup, or another module bundler,\n  and install packages from npm.**\n  * First, install the `simple-statistics` module, using `npm install simple-statistics`,\n    then include the code with require or import:\n  * **I use the `require` function to use modules in my project. (most likely)**\n    * When you use `require`, you have the freedom to assign the module to any\n      variable name you want, but you need to specify the module's name exactly:\n      in this case, 'simple-statistics'. The `require` method returns an object\n      with all of the module's methods attached to it.<br /> <pre>var ss = require('simple-statistics')</pre>\n  * **I use `import` to use modules in my project. I'm probably using Babel, Webpack, or Rollup.**\n    * This module only supports the 'default' export when you're using ES6 module:\n      so you can import all of its methods, attached to an object, like in\n      this example. Importing specific methods will work in Babel, but not\n      in Rollup.<br /> <pre>import ss from 'simple-statistics';</pre>\n* **I'm not using a module bundler. I'm writing a web page, and want to include\n  simple-statistics using a script tag.**\n  * When you use simple-statistics from a script tag, you don't get to choose\n    the variable name it is assigned to: simple-statistics will always become\n    available globally as the variable `ss`. You can reassign this variable to\n    another name if you want to, but doing so is optional. <pre><script src='https://unpkg.com/simple-statistics@5.0.1/dist/simple-statistics.js' /></pre>\n    There are two options for the `src` attribute of that script tag: one with\n    `.min.js` that is compressed, and the other without, that is raw.\n    * `https://unpkg.com/simple-statistics@5.0.1/dist/simple-statistics.js`\n    * `https://unpkg.com/simple-statistics@5.0.1/dist/simple-statistics.min.js`\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/simple-statistics/simple-statistics.git"
  },
  "scripts": {
    "build": "rm -rf dist && mkdir dist && rollup -c",
    "jsdoctest": "mocha --require jsdoctest dist/index.js",
    "lint": "eslint index.js src test",
    "postlint": "documentation lint src",
    "prelint": "are-we-flow-yet src && flow check src",
    "prepublish": "npm run build && ./scripts/update_readme.js",
    "pretest": "npm run build",
    "release": "standard-version && sh ./scripts/update_website.sh",
    "test": "npm run lint && tap --coverage test/*.js && npm run jsdoctest"
  },
  "version": "5.0.1"
}
