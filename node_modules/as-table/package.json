{
  "_from": "as-table@^1.0.31",
  "_id": "as-table@1.0.31",
  "_inBundle": false,
  "_integrity": "sha1-0AGAAk7LttGnRxUN91HTcWrqgWY=",
  "_location": "/as-table",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "as-table",
    "fetchSpec": "^1.0.31",
    "name": "as-table",
    "raw": "as-table@^1.0.31",
    "rawSpec": "^1.0.31",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/",
    "/stacktracey"
  ],
  "_resolved": "https://registry.npmjs.org/as-table/-/as-table-1.0.31.tgz",
  "_shasum": "d00180024ecbb6d1a747150df751d3716aea8166",
  "_shrinkwrap": null,
  "_spec": "as-table@^1.0.31",
  "_where": "C:\\Virtualenv\\nodejs\\crypto\\crypto-collector",
  "author": {
    "email": "rocket.mind@gmail.com",
    "name": "Vitaly Gordon"
  },
  "bugs": {
    "url": "https://github.com/xpl/as-table/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "printable-characters": "^1.0.37"
  },
  "deprecated": false,
  "description": "A simple function that print objects / arrays as ASCII tables. Handles ANSI styling and weird ðŸ’© Unicode emoji symbols â€“ they won't break the layout.",
  "devDependencies": {
    "ansicolor": "^1.1.71",
    "babel-cli": "^6.26.0",
    "babel-plugin-transform-es2015-destructuring": "^6.23.0",
    "babel-plugin-transform-es2015-spread": "^6.22.0",
    "coveralls": "^2.13.3",
    "eslint": "^4.8.0",
    "istanbul": "^0.4.5",
    "mocha": "^3.5.3",
    "nyc": "^11.2.1"
  },
  "homepage": "https://github.com/xpl/as-table",
  "keywords": [
    "ASCII",
    "array as table",
    "array format",
    "array table",
    "as table",
    "columns",
    "columns",
    "console",
    "grid",
    "grid",
    "layout",
    "log",
    "object as table",
    "object table",
    "print",
    "print object",
    "print table",
    "sheet",
    "stringify",
    "table",
    "tablefy",
    "terminal",
    "text",
    "text table",
    "tty"
  ],
  "license": "MIT",
  "main": "build/as-table.js",
  "name": "as-table",
  "optionalDependencies": {},
  "readme": "# as-table\n\n[![Build Status](https://travis-ci.org/xpl/as-table.svg?branch=master)](https://travis-ci.org/xpl/as-table) [![Coverage Status](https://coveralls.io/repos/github/xpl/as-table/badge.svg)](https://coveralls.io/github/xpl/as-table) [![npm](https://img.shields.io/npm/v/as-table.svg)](https://npmjs.com/package/as-table) [![dependencies Status](https://david-dm.org/xpl/as-table/status.svg)](https://david-dm.org/xpl/as-table) [![Scrutinizer Code Quality](https://img.shields.io/scrutinizer/g/xpl/as-table.svg)](https://scrutinizer-ci.com/g/xpl/as-table/?branch=master)\n\nA simple function that print objects and arrays as ASCII tables. Supports ANSI styling and weird ðŸ’© Unicode emoji symbols (they won't break the layout), thanks to [`printable-characters`](https://github.com/xpl/printable-characters).\n\n```bash\nnpm install as-table\n```\n\n## Printing objects\n\n```javascript\nasTable = require ('as-table')\n\nasTable ([ { foo: true,  string: 'abcde',      num: 42 },\n           { foo: false, string: 'qwertyuiop', num: 43 },\n           {             string:  null,        num: 44 } ])\n```\n```\nfoo    string      num\n----------------------\ntrue   abcde       42 \nfalse  qwertyuiop  43 \n       null        44 \n```\n\n## Printing arrays\n\n```javascript\nasTable ([['qwe',       '123456789', 'zxcvbnm'],\n          ['qwerty',    '12',        'zxcvb'],\n          ['qwertyiop', '1234567',   'z']])\n```\n```\nqwe        123456789  zxcvbnm\nqwerty     12         zxcvb\nqwertyiop  1234567    z\n```\n\n## Limiting total width by proportionally trimming cells + setting columns delimiter\n\n```javascript\nasTable.configure ({ maxTotalWidth: 22, delimiter: ' | ' }) (data)\n```\n```\nqwe   | 1234â€¦ | zxcâ€¦\nqwerâ€¦ | 12    | zxcâ€¦\nqwerâ€¦ | 1234â€¦ | z   \n```\n\n## Right align\n\n```javascript\nasTable.configure ({ right: true }) (data)\n```\n```\n      foo        bar      baz\n-----------------------------\n      qwe  123456789  zxcvbnm\n   qwerty         12    zxcvb\nqwertyiop    1234567        z\n```\n\n## Providing a custom object printer\n\n```javascript\nasTable.configure ({ print: obj => (typeof obj === 'boolean') ? (obj ? 'yes' : 'no') : String (obj) }) (data)\n```\n```\nfoo  string      num\n--------------------\nyes  abcde       42 \nno   qwertyuiop  43 \n     null        44 \n```\n\n## Obtaining a pre-configured function\n\n```javascript\nasTable = require ('as-table').configure ({ maxTotalWidth: 25, delimiter: ' | ' })\n\nasTable (data)\n```\n\n## Customizing the title rendering and the header separator\n\nWith string coloring by [`ansicolor`](https://github.com/xpl/ansicolor) (just for the demo purposes, any library will fit):\n\n```javascript\nasTable = require ('as-table').configure ({ title: x => x.bright, delimiter: ' | '.dim.cyan, dash: '-'.bright.cyan })\n\nconsole.log (\n   asTable ([ { foo: true,  string: 'abcde',                             num: 42 },\n              { foo: false, string: 'qwertyuiop'.bgMagenta.green.bright, num: 43 } ])\n```\n\n<img width=\"179\" alt=\"screen shot 2017-07-21 at 23 46 14\" src=\"https://user-images.githubusercontent.com/1707/28481945-dcb0f8d6-6e6e-11e7-896e-dfad40662daf.png\">\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/xpl/as-table.git"
  },
  "scripts": {
    "autotest": "env AS_TABLE_TEST_FILE='./as-table' mocha --reporter spec --watch",
    "babel": "babel as-table.js --source-maps inline --out-file ./build/as-table.js",
    "build": "npm run lint && npm run lint-test && npm run babel",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "lint": "eslint as-table.js",
    "lint-test": "eslint test.js",
    "test": "npm run build && env AS_TABLE_TEST_FILE='./build/as-table' nyc --reporter=html --reporter=text mocha --reporter spec"
  },
  "version": "1.0.31"
}
